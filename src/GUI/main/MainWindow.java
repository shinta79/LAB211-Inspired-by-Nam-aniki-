package GUI.main;

import BLL.CD_BUS;
import DTO.CD_DTO;
import GUI.components.InputWindow;
import MyUtils.DragListener;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.URL;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;

/**
 *
 * @author giahu
 */
public class MainWindow extends javax.swing.JFrame {

    private final DefaultTableModel defaultTable;
    private CD_BUS bus = new CD_BUS();
    TableRowSorter<TableModel> sorter;
    private final int MAX_CD_SPACE = 20;
    private boolean flag = false;
    private String pathOpen = "";
    java.util.Timer timer = null;
    TimerTask task;
    URL iconURL;
    ImageIcon icon;

    /**
     * Creates new form CD_GUI
     */
    public MainWindow() {
        initComponents();
        MessagePanel.setVisible(false);
        CDCounter.setVisible(false);

        defaultTable = (DefaultTableModel) jTable1.getModel();
        defaultTable.addTableModelListener(jTable1);
        jTable1.setModel(defaultTable);

        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                search();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                search();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                search();
            }

            public void search() {
                if (jTextField1.getText().length() > 0) {
                    ArrayList temp = bus.searchCD(jTextField1.getText(), jComboBox2.getSelectedItem().toString());
                    showData(temp);
                } else {
                    showData(bus.getList());
                }
            }
        });

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        jTable1.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);

        jComboBox2.setSelectedIndex(2);
        DragListener drag = new DragListener(this);
        jPanel2.addMouseListener(drag);
        jPanel2.addMouseMotionListener(drag);
    }

    public void setFlag(boolean flag) {
        this.flag = flag;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem_Open = new javax.swing.JMenuItem();
        jMenuItem_Save = new javax.swing.JMenuItem();
        jMenuItem_SaveTo = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Exit = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        search = new javax.swing.JLabel();
        popMenu = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        CDCounter = new javax.swing.JPanel();
        Counter1 = new javax.swing.JLabel();
        Slash = new javax.swing.JLabel();
        Counter2 = new javax.swing.JLabel();
        ADD = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        UPDATE = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DELETE = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        MessagePanel = new javax.swing.JPanel();
        MessageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPopupMenu1.setPreferredSize(new java.awt.Dimension(120, 74));

        jMenuItem_Open.setText("Open");
        jMenuItem_Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_OpenActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem_Open);

        jMenuItem_Save.setText("Save");
        jMenuItem_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem_Save);

        jMenuItem_SaveTo.setText("Save to...");
        jMenuItem_SaveTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveToActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem_SaveTo);
        jPopupMenu1.add(jSeparator2);

        jMenuItem_Exit.setText("Exit");
        jMenuItem_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ExitActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem_Exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CD House Program");
        setIconImages(null);
        setLocation(new java.awt.Point(500, 400));
        setLocationByPlatform(true);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 102, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 210));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CD House Program");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 99, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("LAB 211 Assignment");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 50, -1, -1));

        exit.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("✕");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        jPanel2.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 6, -1, -1));

        jTextField1.setBackground(new java.awt.Color(153, 102, 0));
        jTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(null);
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 146, 290, 36));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 188, 290, 10));

        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/search-13-32.png"))); // NOI18N
        jPanel2.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 150, -1, -1));

        popMenu.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        popMenu.setForeground(new java.awt.Color(255, 255, 255));
        popMenu.setText("...");
        popMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                popMenuMouseClicked(evt);
            }
        });
        jPanel2.add(popMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 0, -1, 23));

        minimize.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setText("—");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        jPanel2.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(917, 6, -1, -1));

        jComboBox2.setBackground(new java.awt.Color(153, 102, 0));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Collection", "Type", "Title", "Price", "ID", "Year" }));
        jComboBox2.setBorder(null);
        jComboBox2.setFocusable(false);
        jPanel2.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(903, 158, 91, -1));

        CDCounter.setBackground(new java.awt.Color(204, 153, 0));
        CDCounter.setForeground(new java.awt.Color(255, 255, 255));
        CDCounter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CDCounterMouseClicked(evt);
            }
        });

        Counter1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        Counter1.setForeground(new java.awt.Color(255, 255, 255));
        Counter1.setText("0");

        Slash.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        Slash.setForeground(new java.awt.Color(255, 255, 255));
        Slash.setText("/");

        Counter2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        Counter2.setForeground(new java.awt.Color(255, 255, 255));
        Counter2.setText("0");

        javax.swing.GroupLayout CDCounterLayout = new javax.swing.GroupLayout(CDCounter);
        CDCounter.setLayout(CDCounterLayout);
        CDCounterLayout.setHorizontalGroup(
            CDCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CDCounterLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(Counter1)
                .addGap(18, 18, 18)
                .addComponent(Slash, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Counter2)
                .addGap(17, 17, 17))
        );
        CDCounterLayout.setVerticalGroup(
            CDCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CDCounterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CDCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Counter1)
                    .addComponent(Slash)
                    .addComponent(Counter2))
                .addContainerGap())
        );

        jPanel2.add(CDCounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 168, -1, -1));

        ADD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ADDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADDMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 102, 0));
        jLabel4.setText("ADD");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/plus-5-48.png"))); // NOI18N

        javax.swing.GroupLayout ADDLayout = new javax.swing.GroupLayout(ADD);
        ADD.setLayout(ADDLayout);
        ADDLayout.setHorizontalGroup(
            ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ADDLayout.createSequentialGroup()
                .addGroup(ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ADDLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel5))
                    .addGroup(ADDLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel4)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        ADDLayout.setVerticalGroup(
            ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ADDLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        UPDATE.setPreferredSize(new java.awt.Dimension(140, 90));
        UPDATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UPDATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UPDATEMouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 102, 0));
        jLabel6.setText("UPDATE");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/edit-2-48.png"))); // NOI18N

        javax.swing.GroupLayout UPDATELayout = new javax.swing.GroupLayout(UPDATE);
        UPDATE.setLayout(UPDATELayout);
        UPDATELayout.setHorizontalGroup(
            UPDATELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UPDATELayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(UPDATELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        UPDATELayout.setVerticalGroup(
            UPDATELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UPDATELayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        DELETE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DELETEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DELETEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DELETEMouseExited(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 102, 0));
        jLabel8.setText("DELETE");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/images/trash-9-48.png"))); // NOI18N

        javax.swing.GroupLayout DELETELayout = new javax.swing.GroupLayout(DELETE);
        DELETE.setLayout(DELETELayout);
        DELETELayout.setHorizontalGroup(
            DELETELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DELETELayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(DELETELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(44, 44, 44))
        );
        DELETELayout.setVerticalGroup(
            DELETELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DELETELayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        MessagePanel.setBackground(new java.awt.Color(204, 0, 0));

        MessageLabel.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        MessageLabel.setForeground(new java.awt.Color(255, 255, 255));
        MessageLabel.setText("Error");

        javax.swing.GroupLayout MessagePanelLayout = new javax.swing.GroupLayout(MessagePanel);
        MessagePanel.setLayout(MessagePanelLayout);
        MessagePanelLayout.setHorizontalGroup(
            MessagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MessagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MessageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MessagePanelLayout.setVerticalGroup(
            MessagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MessageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        jTable1.setBorder(null);
        jTable1.setForeground(new java.awt.Color(102, 51, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Collection", "Type", "Title", "Price", "ID", "Publishing year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setInheritsPopupMenu(true);
        jTable1.setSelectionBackground(new java.awt.Color(204, 153, 0));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setUpdateSelectionOnSort(false);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(600);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(300);
        }
        jTable1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MessagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ADD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ADD, DELETE, UPDATE});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ADD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(MessagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ADDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDMouseEntered
        // TODO add your handling code here:
        setColor(ADD);
    }//GEN-LAST:event_ADDMouseEntered

    private void ADDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDMouseExited
        // TODO add your handling code here:
        resetColor(ADD);
    }//GEN-LAST:event_ADDMouseExited

    private void UPDATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseEntered
        // TODO add your handling code here:
        setColor(UPDATE);
    }//GEN-LAST:event_UPDATEMouseEntered

    private void UPDATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseExited
        // TODO add your handling code here:
        resetColor(UPDATE);
    }//GEN-LAST:event_UPDATEMouseExited

    private void DELETEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseEntered
        // TODO add your handling code here:
        setColor(DELETE);
    }//GEN-LAST:event_DELETEMouseEntered

    private void DELETEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseExited
        // TODO add your handling code here:
        resetColor(DELETE);
    }//GEN-LAST:event_DELETEMouseExited

    private void popMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popMenuMouseClicked
        // TODO add your handling code here:
        jPopupMenu1.show(popMenu, evt.getX(), evt.getY());
        jTextField1.getCaret().setVisible(false);
        jTable1.clearSelection();
    }//GEN-LAST:event_popMenuMouseClicked

    private void jMenuItem_OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_OpenActionPerformed
        // TODO add your handling code here:
        askToSave();
        JFileChooser fileChooser = new JFileChooser();

        fileChooser.setCurrentDirectory(new File("."));
        int response = fileChooser.showOpenDialog(null);

        if (response == JFileChooser.APPROVE_OPTION) {
            try {
                pathOpen = fileChooser.getSelectedFile().getAbsolutePath();
                bus.loadData(pathOpen);
                showData(bus.getList());
                updateCounter();
                CDCounter.setVisible(true);
                showMessage("File loaded succesfully!");
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                showError("File loading fail!");
            }
        }
    }//GEN-LAST:event_jMenuItem_OpenActionPerformed

    private void jMenuItem_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveActionPerformed
        // TODO add your handling code here:
        if (pathOpen.isEmpty()) {
            JFileChooser fileChooser = new JFileChooser();
            String pathSave;

            fileChooser.setCurrentDirectory(new File("."));
            int response = fileChooser.showSaveDialog(null);

            if (response == JFileChooser.APPROVE_OPTION) {
                try {
                    pathSave = fileChooser.getSelectedFile().getAbsolutePath();
                    bus.saveData(pathSave);
                    showMessage("File saved succesfully!");
                    setFlag(false);
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                    showError("File saving fail!");
                }
            }
        } else {
            try {
                bus.saveData(pathOpen);
                showMessage("File saved succesfully!");
                setFlag(false);
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                showError("File saving fail!");
            }
        }
    }//GEN-LAST:event_jMenuItem_SaveActionPerformed

    private void ADDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDMouseClicked
        // TODO add your handling code here:
        if (bus.getList().size() < MAX_CD_SPACE) {
            InputWindow input = new InputWindow();

            input.addComponentListener(new ComponentAdapter() {
                @Override
                public void componentHidden(ComponentEvent e) {
                    showWindow(true);
                    if (input.isCancel()) {
                        showCanceled("Add canceled!");
                    } else {
                        try {
                            bus.addCD(input.getInput());
                            showData(bus.getList());
                            updateCounter();
                            showMessage("Added successfully!");
                            setFlag(true);
                            CDCounter.setVisible(true);
                        } catch (NullPointerException ex) {
                            showError("Added fail!");
                            JOptionPane.showMessageDialog(null, "ID already exist!!", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }

                @Override
                public void componentShown(ComponentEvent e) {
                    showWindow(false);
                }
            });
            input.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Unable to add CDs!!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ADDMouseClicked

    private void UPDATEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseClicked
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            InputWindow input = new InputWindow();

            input.addComponentListener(new ComponentAdapter() {
                @Override
                public void componentHidden(ComponentEvent e) {
                    showWindow(true);
                    if (input.isCancel()) {
                        showCanceled("Update canceled!");
                    } else {
                        bus.updateCD(input.getInput());
                        showData(bus.getList());
                        showMessage("Updated successfully!");
                        setFlag(true);
                    }
                }

                @Override
                public void componentShown(ComponentEvent e) {
                    showWindow(false);
                }
            });
            input.setVisible(true);
            input.setUPDATE(true, bus.findCD(new CD_DTO(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString())));
        } else {
            jTextField1.getCaret().setVisible(false);
            jTable1.clearSelection();
        }
    }//GEN-LAST:event_UPDATEMouseClicked

    private void DELETEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseClicked
        // TODO add your handling code here:
        int x[] = jTable1.getSelectedRows();
        if (x.length == 0) {
            jTextField1.getCaret().setVisible(false);
            jTable1.clearSelection();
        } else {
            for (int i = 0; i < x.length; i++) {
                bus.deleteCD(jTable1.getValueAt(x[i], 4).toString());
                updateCounter();
                showMessage("Deleted successfully!");
                setFlag(true);
            }
            showData(bus.getList());
        }
    }//GEN-LAST:event_DELETEMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        askToSave();
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void jMenuItem_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ExitActionPerformed
        // TODO add your handling code here:
        askToSave();
        System.exit(0);
    }//GEN-LAST:event_jMenuItem_ExitActionPerformed

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        // TODO add your handling code here:
        jTable1.clearSelection();
    }//GEN-LAST:event_jTable1FocusLost

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        jTextField1.getCaret().setVisible(false);
        jTable1.clearSelection();
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        jTextField1.getCaret().setVisible(false);
        jTable1.clearSelection();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        jTextField1.getCaret().setVisible(false);
        jTable1.clearSelection();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        jTextField1.getCaret().setVisible(false);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
        jTextField1.getCaret().setVisible(true);
    }//GEN-LAST:event_jTextField1MouseClicked

    private void CDCounterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CDCounterMouseClicked
        // TODO add your handling code here:
        jTextField1.getCaret().setVisible(false);
        jTable1.clearSelection();
    }//GEN-LAST:event_CDCounterMouseClicked

    private void jMenuItem_SaveToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveToActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        String pathSave;

        fileChooser.setCurrentDirectory(new File("."));
        int response = fileChooser.showSaveDialog(null);

        if (response == JFileChooser.APPROVE_OPTION) {
            try {
                pathSave = fileChooser.getSelectedFile().getAbsolutePath();
                bus.saveData(pathSave);
                showMessage("File saved succesfully!");
                setFlag(false);
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                showError("File saving fail!");
            }
        }
    }//GEN-LAST:event_jMenuItem_SaveToActionPerformed

    private void setColor(JPanel panel) {
        panel.setBackground(new Color(204, 153, 0));
    }

    private void resetColor(JPanel panel) {
        panel.setBackground(new Color(214, 217, 223));
    }

    private void showWindow(Boolean bln) {
        this.setVisible(bln);
    }

    private void showData(ArrayList<CD_DTO> list) {
        defaultTable.setRowCount(0);

        for (CD_DTO cd : list) {
            String[] str = cd.toString().split(", ");

            defaultTable.addRow(new Object[]{str[0], str[1], str[2], "$" + str[3], str[4], str[5]});
        }
    }

    private void showMessage(String msg) {
        MessageLabel.setText(msg);
        MessagePanel.setBackground(new Color(102, 204, 0));
        MessagePanel.setVisible(true);
        doTimerTask();
    }

    private void showCanceled(String msg) {
        MessageLabel.setText(msg);
        MessagePanel.setBackground(new Color(255, 204, 0));
        MessagePanel.setVisible(true);
        doTimerTask();
    }

    private void showError(String msg) {
        MessageLabel.setText(msg);
        MessagePanel.setBackground(new Color(204, 0, 0));
        MessagePanel.setVisible(true);
        doTimerTask();
    }

    private void updateCounter() {
        Counter1.setText(String.valueOf(bus.getList().size()));
        Counter2.setText(String.valueOf(MAX_CD_SPACE));
        if (bus.getList().size() < 10) {
            CDCounter.setBackground(new Color(102, 204, 0));
        } else if (bus.getList().size() >= 10 && bus.getList().size() < 19) {
            CDCounter.setBackground(new Color(255, 204, 0));
        } else {
            CDCounter.setBackground(new Color(204, 0, 0));
        }
    }

    private void doTimerTask() {
        if (timer != null) {
            timer.cancel();
        }
        timer = new java.util.Timer();
        task = new TimerTask() {
            @Override
            public void run() {
                MessagePanel.setVisible(false);
                timer.cancel();
            }
        };
        timer.schedule(task, 2000);
    }

    public void askToSave() {
        if (this.flag) {
            if (JOptionPane.showConfirmDialog(null, "There are unsaved changes.\n"
                    + "Do you want to save before exiting?", "WARNING",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                if (pathOpen.isEmpty()) {
                    JFileChooser fileChooser = new JFileChooser();
                    String pathSave;

                    fileChooser.setCurrentDirectory(new File("."));
                    int response = fileChooser.showSaveDialog(null);

                    if (response == JFileChooser.APPROVE_OPTION) {
                        try {
                            pathSave = fileChooser.getSelectedFile().getAbsolutePath();
                            bus.saveData(pathSave);
                            showMessage("File saved succesfully!");
                            setFlag(false);
                        } catch (IOException ex) {
                            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                            showError("File saving fail!");
                        }
                    }
                } else {
                    try {
                        bus.saveData(pathOpen);
                        showMessage("File saved succesfully!");
                        setFlag(false);
                    } catch (IOException ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                        showError("File saving fail!");
                    }
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ADD;
    private javax.swing.JPanel CDCounter;
    private javax.swing.JLabel Counter1;
    private javax.swing.JLabel Counter2;
    private javax.swing.JPanel DELETE;
    private javax.swing.JLabel MessageLabel;
    private javax.swing.JPanel MessagePanel;
    private javax.swing.JLabel Slash;
    private javax.swing.JPanel UPDATE;
    private javax.swing.JLabel exit;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem_Exit;
    private javax.swing.JMenuItem jMenuItem_Open;
    private javax.swing.JMenuItem jMenuItem_Save;
    private javax.swing.JMenuItem jMenuItem_SaveTo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel popMenu;
    private javax.swing.JLabel search;
    // End of variables declaration//GEN-END:variables
}
